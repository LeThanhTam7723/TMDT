import { useState } from "react";
import { createReport } from "../API/ReportService";

const ReusableReportForm = ({ courseId }) => {
  const [showModal, setShowModal] = useState(false);
  const [form, setForm] = useState({
    subject: "",
    detail: "",
    category: "Technical Issue",
    priority: "normal"
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!form.subject.trim() || !form.detail.trim()) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß ti√™u ƒë·ªÅ v√† n·ªôi dung.");
      return;
    }

    try {
      const payload = {
        ...form,
        courseId: courseId || null // n·∫øu null th√¨ backend v·∫´n x·ª≠ l√Ω
      };

      const response = await createReport(payload);

      if (response.data?.code === 0) {
        alert("‚úÖ G·ª≠i b√°o c√°o th√†nh c√¥ng!");
        setForm({
          subject: "",
          detail: "",
          category: "Technical Issue",
          priority: "normal"
        });
        setShowModal(false);
      } else {
        alert("üö´ L·ªói: " + (response.data?.message || "Kh√¥ng x√°c ƒë·ªãnh"));
      }
    } catch (error) {
      console.error("‚ùå L·ªói khi g·ª≠i b√°o c√°o:", error);
      alert("G·ª≠i b√°o c√°o th·∫•t b·∫°i.");
    }
  };

  return (
    <>
      {/* Button m·ªü modal */}
      <button
        className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
        onClick={() => setShowModal(true)}
      >
        G·ª≠i khi·∫øu n·∫°i v·ªÅ kh√≥a h·ªçc
      </button>

      {/* Modal hi·ªÉn th·ªã */}
      {showModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
          <div className="bg-white p-6 rounded-lg w-full max-w-lg shadow-lg relative">
            <h2 className="text-xl font-bold mb-4">G·ª≠i b√°o c√°o t·ªõi qu·∫£n tr·ªã vi√™n</h2>

            <form onSubmit={handleSubmit}>
              <div className="mb-4">
                <label className="block mb-1">Ch·ªß ƒë·ªÅ</label>
                <input
                  type="text"
                  name="subject"
                  value={form.subject}
                  onChange={handleChange}
                  className="w-full border rounded px-3 py-2"
                  placeholder="Nh·∫≠p ti√™u ƒë·ªÅ b√°o c√°o"
                />
              </div>

              <div className="mb-4">
                <label className="block mb-1">Chi ti·∫øt</label>
                <textarea
                  name="detail"
                  value={form.detail}
                  onChange={handleChange}
                  rows={4}
                  className="w-full border rounded px-3 py-2"
                  placeholder="M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ..."
                />
              </div>

              <div className="mb-4">
                <label className="block mb-1">Lo·∫°i v·∫•n ƒë·ªÅ</label>
                <select
                  name="category"
                  value={form.category}
                  onChange={handleChange}
                  className="w-full border rounded px-3 py-2"
                >
                  <option value="Technical Issue">L·ªói k·ªπ thu·∫≠t</option>
                  <option value="Payment Issue">V·∫•n ƒë·ªÅ thanh to√°n</option>
                  <option value="Content Feedback">Ph·∫£n h·ªìi n·ªôi dung</option>
                  <option value="Other">Kh√°c</option>
                </select>
              </div>

              <div className="mb-4">
                <label className="block mb-1">M·ª©c ƒë·ªô ∆∞u ti√™n</label>
                <select
                  name="priority"
                  value={form.priority}
                  onChange={handleChange}
                  className="w-full border rounded px-3 py-2"
                >
                  <option value="low">Th·∫•p</option>
                  <option value="normal">B√¨nh th∆∞·ªùng</option>
                  <option value="high">Cao</option>
                </select>
              </div>

              <div className="flex justify-end gap-2 mt-6">
                <button
                  type="button"
                  className="px-4 py-2 border rounded text-gray-700"
                  onClick={() => setShowModal(false)}
                >
                  H·ªßy
                </button>
                <button
                  type="submit"
                  className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
                >
                  G·ª≠i b√°o c√°o
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </>
  );
};

export default ReusableReportForm;
